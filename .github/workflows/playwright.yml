name: Playwright Tests with Allure

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repo code
    - uses: actions/checkout@v4

    # Step 2: Set up Node.js
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    # Step 3: Cache node_modules for faster installs
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    # Step 4: Install npm packages
    - name: Install dependencies
      run: npm ci

    # Step 5: Install Playwright browsers
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    # Step 6: Run Playwright tests with Allure reporter
    - name: Run Playwright tests
      run: npx playwright test --reporter=line,allure-playwright

    # Step 7: Generate Allure HTML Report
    - name: Generate Allure HTML Report
      run: |
        npx allure generate ./allure-results --clean -o ./allure-report

    # Step 8: Upload Allure report as artifact
    - name: Upload Allure Report
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

    # Step 9: Upload Playwright HTML report (optional)
    - name: Upload Playwright HTML Report
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    # Step 10: Upload test videos/screenshots (optional)
    - name: Upload Test Videos
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: playwright-videos
        path: tests/videos/
        retention-days: 30
